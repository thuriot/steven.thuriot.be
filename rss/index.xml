<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel> <title>Steven Thuriot.be</title> <description>Thoughts, stories and ideas.</description> <link>https://steven.thuriot.be</link> <atom:link href="https://steven.thuriot.be/rss" rel="self" type="application/rss+xml"/> <item> <title>HTPC: Getting rid of your RDP Woes</title> <description>&lt;p&gt;Last year, I finally decided to get a HTPC hooked up to my TV set (running Windows 8.1). While it has been a major improvement on my TV experience, it has caused some extra woes as well.&lt;/p&gt; </description> <pubDate>Tue, 30 Dec 2014 15:02:00 +0000</pubDate> <link>https://steven.thuriot.be/htpc-getting-rid-of-your-rdp-woes</link> <guid isPermaLink="true">https://steven.thuriot.be/htpc-getting-rid-of-your-rdp-woes</guid> </item> <item> <title>Snapshot</title> <description>&lt;p&gt;When working with a mutable instance, it&amp;#39;s often useful to keep a certain state of that object. This issue is usually solved by implementing &lt;code&gt;IClonable&lt;/code&gt; or using &lt;code&gt;Serialization&lt;/code&gt; (followed by &lt;code&gt;Deserialization&lt;/code&gt;).&lt;/p&gt; </description> <pubDate>Sun, 14 Dec 2014 19:21:00 +0000</pubDate> <link>https://steven.thuriot.be/snapshot</link> <guid isPermaLink="true">https://steven.thuriot.be/snapshot</guid> </item> <item> <title>WPF: A Model First Approach</title> <description>&lt;p&gt;The usual approach, when building a WPF application, even when using a &lt;code&gt;ViewModel&lt;/code&gt;, fact remains that the views are rather tightly coupled by the model you&amp;#39;re using. &lt;/p&gt; </description> <pubDate>Wed, 03 Dec 2014 19:05:00 +0000</pubDate> <link>https://steven.thuriot.be/wpf-a-model-first-approach</link> <guid isPermaLink="true">https://steven.thuriot.be/wpf-a-model-first-approach</guid> </item> <item> <title>HyperQube</title> <description>&lt;p&gt;&lt;a href=&quot;https://github.com/StevenThuriot/HyperQube&quot;&gt;HyperQube&lt;/a&gt; is(/started as) an IFTTT variant, built on top of PushBullet, created for the desktop.&lt;/p&gt; </description> <pubDate>Tue, 23 Sep 2014 17:22:00 +0000</pubDate> <link>https://steven.thuriot.be/hyperqube</link> <guid isPermaLink="true">https://steven.thuriot.be/hyperqube</guid> </item> <item> <title>NuGet as a plugin deployment platform</title> <description>&lt;p&gt;&lt;a href=&quot;http://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt; has become quite popular among .NET developers. As described in one of my earlier posts, it is an amazing tool to manage external dependencies.&lt;/p&gt; </description> <pubDate>Wed, 18 Dec 2013 20:39:00 +0000</pubDate> <link>https://steven.thuriot.be/nuget-as-a-plugin-deployment-platform</link> <guid isPermaLink="true">https://steven.thuriot.be/nuget-as-a-plugin-deployment-platform</guid> </item> <item> <title>Resolving types while stripping down nullables</title> <description>&lt;p&gt;I&amp;#39;m currently working on a WPF project that uses advanced validation for their screens.&lt;/p&gt; </description> <pubDate>Wed, 27 Nov 2013 12:10:00 +0000</pubDate> <link>https://steven.thuriot.be/resolving-types-while-stripping-down-nullables</link> <guid isPermaLink="true">https://steven.thuriot.be/resolving-types-while-stripping-down-nullables</guid> </item> <item> <title>Exceptions and the TPL</title> <description>&lt;p&gt;When an exception occurs while using the TPL, it will always get wrapped with an &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.aggregateexception.aspx&quot;&gt;AggregateException&lt;/a&gt; before you can catch and handle it. This makes catching specific exceptions quite bothersome as you&amp;#39;re basically writing a catch-all block. Bad practices set aside, unwrapping the exception usually meant losing the callstack as well.&lt;/p&gt; </description> <pubDate>Wed, 27 Nov 2013 10:50:00 +0000</pubDate> <link>https://steven.thuriot.be/exceptions-and-the-tpl</link> <guid isPermaLink="true">https://steven.thuriot.be/exceptions-and-the-tpl</guid> </item> <item> <title>NuGet and Hoster Packages in a CI environment</title> <description>&lt;h1&gt;What is NuGet?&lt;/h1&gt; &lt;p&gt;&lt;a href=&quot;http://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt; is the package manager for the Microsoft development platform including .NET. The NuGet client tools provide the ability to produce and consume packages. &lt;/p&gt; </description> <pubDate>Wed, 16 Oct 2013 18:32:00 +0000</pubDate> <link>https://steven.thuriot.be/nuget-and-hoster-packages-in-a-ci-environment</link> <guid isPermaLink="true">https://steven.thuriot.be/nuget-and-hoster-packages-in-a-ci-environment</guid> </item> <item> <title>WF in WPF: Handing over control to the user</title> <description>&lt;p&gt;...because delivering an application set in stone doesn&amp;#39;t always cut it.&lt;/p&gt; </description> <pubDate>Mon, 01 Jul 2013 09:30:00 +0000</pubDate> <link>https://steven.thuriot.be/wf-in-wpf-handing-over-control-to-the-user</link> <guid isPermaLink="true">https://steven.thuriot.be/wf-in-wpf-handing-over-control-to-the-user</guid> </item> <item> <title>NuGet Guidance</title> <description>&lt;p&gt;Sometimes a NuGet package can contain complex install logic. When this is the case, it can be a real hassle for a C# programmer to write all the code in powershell. &lt;/p&gt; </description> <pubDate>Sat, 07 Apr 2012 17:22:00 +0000</pubDate> <link>https://steven.thuriot.be/nuget-guidance</link> <guid isPermaLink="true">https://steven.thuriot.be/nuget-guidance</guid> </item> </channel> </rss>
<?xml version="1.0" encoding="UTF-8"?> <rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"> <channel> <title><![CDATA[Steven Thuriot.be &mdash; Dynamic]]></title> <description><![CDATA[Thoughts, stories and ideas.]]></description> <link>https://steven.thuriot.be</link> <link href="https://steven.thuriot.be/tag/dynamic/rss/" rel="self" type="application/rss+xml"/> <ttl>60</ttl> <item> <title><![CDATA[Snapshot]]></title> <description><![CDATA[When working with a mutable instance, it&#39;s often useful to keep a certain state of that object. This issue is usually solved by implementing `IClonable` or using `Serialization` (followed by `Deserialization`). ]]></description> <link>https://steven.thuriot.be/snapshot</link> <guid isPermaLink="true">https://steven.thuriot.be/snapshot</guid> <pubDate>2014-12-14T19:21:00+00:00</pubDate> <media:content url="//cdn.thuriot.be/images/Covers/lens_camera_macro.jpg" medium="image"/> <content:encoded><![CDATA[<p>When working with a mutable instance, it&#39;s often useful to keep a certain state of that object. This issue is usually solved by implementing <code>IClonable</code> or using <code>Serialization</code> (followed by <code>Deserialization</code>).</p> <p>This might be an issue, however, when that instance is one from a third-party library. I wrote a little library, called <a href="https://github.com/StevenThuriot/Snapshot">Snapshot</a>, that uses the DLR to come up with a solution to this problem.</p> <p>By default, it will map all public properties and fields to a dynamic object. This behaviour is configurable. You will end up with a dynamic object with the same <strong>public</strong> signature as the one you took a snapshot of.</p> <div class="highlight"><pre><code class="language-csharp" data-lang="csharp"><span class="kt">var</span> <span class="n">person</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Person</span><span class="p">(</span><span class="s">&quot;Steven&quot;</span><span class="p">,</span> <span class="s">&quot;Thuriot&quot;</span><span class="p">);</span>
<span class="n">person</span><span class="p">.</span><span class="n">Age</span> <span class="p">=</span> <span class="m">27</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">snapshot</span> <span class="p">=</span> <span class="n">person</span><span class="p">.</span><span class="n">TakeSnapshot</span><span class="p">();</span>

<span class="n">person</span><span class="p">.</span><span class="n">Age</span> <span class="p">=</span> <span class="m">28</span><span class="p">;</span>

<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Person age: {0}&quot;</span><span class="p">,</span> <span class="n">person</span><span class="p">.</span><span class="n">Age</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Snapshot age: {0}&quot;</span><span class="p">,</span> <span class="n">snapshot</span><span class="p">.</span><span class="n">Age</span><span class="p">);</span>
</code></pre></div> <hr> <p>Output:</p> <div class="highlight"><pre><code class="language-xml" data-lang="xml">Person age: 28
Snapshot age: 27
</code></pre></div>]]></content:encoded> </item> </channel> </rss>
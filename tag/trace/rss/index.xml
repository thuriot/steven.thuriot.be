<?xml version="1.0" encoding="UTF-8"?> <rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"> <channel> <title><![CDATA[Steven Thuriot.be &mdash; Trace]]></title> <description><![CDATA[Thoughts, stories and ideas.]]></description> <link>http://steven.thuriot.be</link> <link href="//steven.thuriot.be/tag/trace/rss/" rel="self" type="application/rss+xml"/> <ttl>60</ttl> <item> <title><![CDATA[Colored Console TraceListener]]></title> <description><![CDATA[Writing to the `Console` can provide a lot of useful information while developing. While this can easily be done by using the static `Console` class, I prefer using the `Trace` class instead. ]]></description> <link>//steven.thuriot.be/colored-console-tracelistener</link> <guid isPermaLink="true">//steven.thuriot.be/colored-console-tracelistener</guid> <pubDate>2015-08-31T18:38:00+00:00</pubDate> <media:content url="//cdn.thuriot.be/images/Covers/ascii.png" medium="image"/> <content:encoded><![CDATA[<p>Writing to the <code>Console</code> can provide a lot of useful information while developing. While this can easily be done by using the static <code>Console</code> class, I prefer using the <code>Trace</code> class instead.</p> <p>Doing it this way, our code is easily reusable for other kinds of logging and provides the ability to add additional metadata, which can also be used to filter the messages (e.g. the type).</p> <p><code>System.Diagnostics</code> provides the <code>ConsoleTraceListener</code> class to combine these two. But I like to spice it up a bit and color-code the different types of events.</p> <p>This can easily be done by inheriting the provided TraceListener and overriding the <code>ConsoleColor</code> before writing our events.</p> <div class="highlight"><pre><code class="language-csharp" data-lang="csharp"><span class="k">public</span> <span class="k">class</span> <span class="nc">ColorConsoleTraceListener</span> <span class="p">:</span> <span class="n">ConsoleTraceListener</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="k">readonly</span> <span class="n">IReadOnlyDictionary</span><span class="p">&lt;</span><span class="n">TraceEventType</span><span class="p">,</span> <span class="n">ConsoleColor</span><span class="p">&gt;</span> <span class="n">_colors</span><span class="p">;</span>
    <span class="k">static</span> <span class="nf">ColorConsoleTraceListener</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">_colors</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="n">TraceEventType</span><span class="p">,</span> <span class="n">ConsoleColor</span><span class="p">&gt;</span>
                <span class="p">{</span>
                    <span class="p">{</span><span class="n">TraceEventType</span><span class="p">.</span><span class="n">Verbose</span><span class="p">,</span>      <span class="n">ConsoleColor</span><span class="p">.</span><span class="n">DarkGray</span><span class="p">},</span>
                    <span class="p">{</span><span class="n">TraceEventType</span><span class="p">.</span><span class="n">Information</span><span class="p">,</span>  <span class="n">ConsoleColor</span><span class="p">.</span><span class="n">Gray</span><span class="p">},</span>
                    <span class="p">{</span><span class="n">TraceEventType</span><span class="p">.</span><span class="n">Warning</span><span class="p">,</span>      <span class="n">ConsoleColor</span><span class="p">.</span><span class="n">Yellow</span><span class="p">},</span>
                    <span class="p">{</span><span class="n">TraceEventType</span><span class="p">.</span><span class="n">Error</span><span class="p">,</span>        <span class="n">ConsoleColor</span><span class="p">.</span><span class="n">DarkRed</span><span class="p">},</span>
                    <span class="p">{</span><span class="n">TraceEventType</span><span class="p">.</span><span class="n">Critical</span><span class="p">,</span>     <span class="n">ConsoleColor</span><span class="p">.</span><span class="n">Red</span><span class="p">},</span>
                    <span class="p">{</span><span class="n">TraceEventType</span><span class="p">.</span><span class="n">Start</span><span class="p">,</span>        <span class="n">ConsoleColor</span><span class="p">.</span><span class="n">DarkCyan</span><span class="p">},</span>
                    <span class="p">{</span><span class="n">TraceEventType</span><span class="p">.</span><span class="n">Stop</span><span class="p">,</span>         <span class="n">ConsoleColor</span><span class="p">.</span><span class="n">DarkGreen</span><span class="p">}</span>
                <span class="p">};</span>
    <span class="p">}</span>

    <span class="k">readonly</span> <span class="kt">bool</span> <span class="n">_prependEventType</span><span class="p">;</span>
    <span class="k">readonly</span> <span class="kt">bool</span> <span class="n">_prependSource</span><span class="p">;</span>
    <span class="k">public</span> <span class="nf">ColorConsoleTraceListener</span><span class="p">(</span><span class="kt">bool</span> <span class="n">prependEventType</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">prependSource</span> <span class="p">=</span> <span class="k">true</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_prependEventType</span> <span class="p">=</span> <span class="n">prependEventType</span><span class="p">;</span>
        <span class="n">_prependSource</span> <span class="p">=</span> <span class="n">prependSource</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">TraceEvent</span><span class="p">(</span><span class="n">TraceEventCache</span> <span class="n">eventCache</span><span class="p">,</span> <span class="kt">string</span> <span class="n">source</span><span class="p">,</span> <span class="n">TraceEventType</span> <span class="n">eventType</span><span class="p">,</span> <span class="kt">int</span> <span class="n">id</span><span class="p">,</span> <span class="kt">string</span> <span class="n">message</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">Filter</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">Filter</span><span class="p">.</span><span class="n">ShouldTrace</span><span class="p">(</span><span class="n">eventCache</span><span class="p">,</span> <span class="n">source</span><span class="p">,</span> <span class="n">eventType</span><span class="p">,</span> <span class="n">id</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">))</span>
            <span class="k">return</span><span class="p">;</span>

        <span class="n">Trace</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">eventType</span><span class="p">,</span> <span class="n">message</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">TraceEvent</span><span class="p">(</span><span class="n">TraceEventCache</span> <span class="n">eventCache</span><span class="p">,</span> <span class="kt">string</span> <span class="n">source</span><span class="p">,</span> <span class="n">TraceEventType</span> <span class="n">eventType</span><span class="p">,</span> <span class="kt">int</span> <span class="n">id</span><span class="p">,</span> <span class="kt">string</span> <span class="n">format</span><span class="p">,</span> <span class="k">params</span> <span class="kt">object</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">Filter</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">Filter</span><span class="p">.</span><span class="n">ShouldTrace</span><span class="p">(</span><span class="n">eventCache</span><span class="p">,</span> <span class="n">source</span><span class="p">,</span> <span class="n">eventType</span><span class="p">,</span> <span class="n">id</span><span class="p">,</span> <span class="n">format</span><span class="p">,</span> <span class="n">args</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">))</span>
            <span class="k">return</span><span class="p">;</span>


        <span class="n">Trace</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">eventType</span><span class="p">,</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="n">CultureInfo</span><span class="p">.</span><span class="n">InvariantCulture</span><span class="p">,</span> <span class="n">format</span><span class="p">,</span> <span class="n">args</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="k">void</span> <span class="nf">Trace</span><span class="p">(</span><span class="kt">string</span> <span class="n">source</span><span class="p">,</span> <span class="n">TraceEventType</span> <span class="n">eventType</span><span class="p">,</span> <span class="kt">string</span> <span class="n">message</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">ConsoleColor</span><span class="p">?</span> <span class="n">previousColor</span><span class="p">;</span>
        <span class="n">ConsoleColor</span> <span class="n">color</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">_colors</span><span class="p">.</span><span class="n">TryGetValue</span><span class="p">(</span><span class="n">eventType</span><span class="p">,</span> <span class="k">out</span> <span class="n">color</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">previousColor</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="n">ForegroundColor</span><span class="p">;</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ForegroundColor</span> <span class="p">=</span> <span class="n">color</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">previousColor</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">_prependSource</span><span class="p">)</span> <span class="n">Write</span><span class="p">(</span><span class="n">source</span> <span class="p">+</span> <span class="s">&quot; — &quot;</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">_prependEventType</span><span class="p">)</span> <span class="n">Write</span><span class="p">(</span><span class="n">eventType</span> <span class="p">+</span> <span class="s">&quot; — &quot;</span><span class="p">);</span>
        <span class="n">WriteLine</span><span class="p">(</span><span class="n">message</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">previousColor</span><span class="p">.</span><span class="n">HasValue</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ForegroundColor</span> <span class="p">=</span> <span class="n">previousColor</span><span class="p">.</span><span class="n">Value</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>]]></content:encoded> </item> </channel> </rss>